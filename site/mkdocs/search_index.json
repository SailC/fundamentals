{
    "docs": [
        {
            "location": "/", 
            "text": "ICP content demos\n\n\nThis repo contains a set of interview algorithm \n system design questions.\n\n\nObjective\n\n\n\n\nsort the questions in different categories and companies.\n\n\n\n\nDemo Lists\n\n\n\n\nLinkedin\n\n\nThumbtack\n\n\nFacebook\n\n\nGoogle", 
            "title": "Home"
        }, 
        {
            "location": "/#icp-content-demos", 
            "text": "This repo contains a set of interview algorithm   system design questions.", 
            "title": "ICP content demos"
        }, 
        {
            "location": "/#objective", 
            "text": "sort the questions in different categories and companies.", 
            "title": "Objective"
        }, 
        {
            "location": "/#demo-lists", 
            "text": "Linkedin  Thumbtack  Facebook  Google", 
            "title": "Demo Lists"
        }, 
        {
            "location": "/Google/", 
            "text": "Sorting \n Searching\n\n\nSqrt(x)\n\n\n\n\nbrute force\n\n\nfor i in [0, x], find the last i so that \ni ^ 2 \n= x\n.\n\n\n\n\n\n\nbinary search\n\n\npredicate \nf(x) \n=\n x ^ 2 \n= target\n\n\ntrue, true, true, ..., false, false, false\n\nfind the last x so that f(x) is true.\n\u5c0f\u5fc3\nlo = mid\n \u5bb9\u6613\u5f15\u8d77\u6b7b\u5faa\u73af\n\nmid = lo + ~~((hi - lo + 1) / 2)\n to avoid dead loop\n\n\n\n\n\n\n\n\nvar\n \nmySqrt\n \n=\n \nfunction\n(\nx\n)\n \n{\n\n    \nlet\n \nlo\n \n=\n \n0\n,\n \nhi\n \n=\n \nx\n;\n\n    \nwhile\n \n(\nlo\n \n \nhi\n)\n \n{\n\n        \nlet\n \nmid\n \n=\n \nlo\n \n+\n \n~~\n((\nhi\n \n-\n \nlo\n \n+\n \n1\n)\n \n/\n \n2\n);\n\n        \nif\n \n(\nmid\n \n*\n \nmid\n \n \nx\n)\n \n{\n\n            \nhi\n \n=\n \nmid\n \n-\n \n1\n;\n\n        \n}\n \nelse\n \n{\n\n            \nlo\n \n=\n \nmid\n;\n\n        \n}\n\n    \n}\n\n    \nreturn\n \nlo\n;\n\n\n};", 
            "title": "Google"
        }, 
        {
            "location": "/Google/#sorting-searching", 
            "text": "", 
            "title": "Sorting &amp; Searching"
        }, 
        {
            "location": "/Google/#sqrtx", 
            "text": "brute force  for i in [0, x], find the last i so that  i ^ 2  = x .    binary search  predicate  f(x)  =  x ^ 2  = target  true, true, true, ..., false, false, false \nfind the last x so that f(x) is true.\n\u5c0f\u5fc3 lo = mid  \u5bb9\u6613\u5f15\u8d77\u6b7b\u5faa\u73af mid = lo + ~~((hi - lo + 1) / 2)  to avoid dead loop     var   mySqrt   =   function ( x )   { \n     let   lo   =   0 ,   hi   =   x ; \n     while   ( lo     hi )   { \n         let   mid   =   lo   +   ~~ (( hi   -   lo   +   1 )   /   2 ); \n         if   ( mid   *   mid     x )   { \n             hi   =   mid   -   1 ; \n         }   else   { \n             lo   =   mid ; \n         } \n     } \n     return   lo ;  };", 
            "title": "Sqrt(x)"
        }, 
        {
            "location": "/Linkedin/", 
            "text": "Algorithm", 
            "title": "Linkedin"
        }, 
        {
            "location": "/Linkedin/#algorithm", 
            "text": "", 
            "title": "Algorithm"
        }
    ]
}